{"version":3,"sources":["components/quoteblock/Block.js","App.js","reportWebVitals.js","index.js"],"names":["Block","props","useState","quote","setQuote","author","setAuthor","col","setCol","changeCol","setChangeCol","colors","getQuote","fetch","then","res","json","data","rand","Math","floor","random","q","quotes","bg","length","change","catch","err","console","log","useEffect","className","id","style","color","CSSTransition","in","timeout","classNames","align","class","fontSize","href","encodeURIComponent","target","onClick","App","bgcolor","setbgcolor","background","c","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAoGeA,MAhGf,SAAeC,GACb,MAA0BC,mBACxB,0EADF,mBAAOC,EAAP,KAAcC,EAAd,KAGA,EAA4BF,mBAAS,gBAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAsBJ,mBAAS,QAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAIIC,EAAS,CACX,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEIC,EAAW,WACfC,MAjBA,0IAkBGC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAIC,EAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UACvBC,EAAIL,EAAKM,OAAOL,GAChBM,EAAKb,EAAOQ,KAAKC,MAAMD,KAAKE,SAAWV,EAAOc,SAClDjB,EAAOgB,GAEPvB,EAAMyB,OAAOF,GACbd,GAAcD,GACdL,EAASkB,EAAEnB,OACXG,EAAUgB,EAAEjB,WAEbsB,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAKhC,OAHAG,qBAAU,WACRnB,MACC,IAED,qBAAKoB,UAAU,MAAf,SACE,sBACEA,UAAU,iCACVC,GAAG,YACHC,MAAO,CAAEC,MAAO5B,GAHlB,UAKE,cAAC6B,EAAA,EAAD,CAAeC,GAAI5B,EAAW6B,QAAS,IAAKC,WAAW,OAAvD,SACE,qBAAKN,GAAG,OAAR,SAEE,qBAAIO,MAAM,SAASP,GAAG,aAAtB,UACE,mBAAGQ,MAAM,mBAAT,eADF,QAC2CtC,SAI/C,uBACA,cAACiC,EAAA,EAAD,CAAeC,GAAI5B,EAAW6B,QAAS,IAAKC,WAAW,OAAvD,SACE,mBAAGN,GAAG,SAASO,MAAM,QAAQN,MAAO,CAAEQ,SAAU,SAAhD,SACG,IAAMrC,MAGX,sBAAK2B,UAAU,UAAf,UACE,sBAAKA,UAAU,UAAf,UACE,mBACEW,KACE,yDACAC,mBAAmB,IAAMzC,EAAQ,KAAOE,GAE1C4B,GAAG,cACHD,UAAU,oBACVa,OAAO,OAPT,SASE,mBAAGb,UAAU,oBAEf,mBAAGW,KAAK,IAAIV,GAAG,aAAaD,UAAU,oBAAtC,SACE,mBAAGA,UAAU,wBAGjB,oBACEA,UAAU,kBACVC,GAAG,YACHU,KAAK,IACLG,QAASlC,EAJX,kBAMO,mBAAGoB,UAAU,kCC1Dfe,MA5Bf,WACE,MAA8B7C,mBAAS,QAAvC,mBAAO8C,EAAP,KAAgBC,EAAhB,KAKA,OACE,sBAAKhB,GAAG,aAAaC,MAAO,CAAEgB,WAAYF,GAA1C,UACE,wBAAQhB,UAAU,eAGlB,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CAAON,OATO,SAACyB,GACnBF,EAAWE,QAUT,yBAAQX,MAAM,SAAd,yCACqB,IACnB,mBACEG,KAAK,mEACLE,OAAO,SACPO,IAAI,aAHN,2BCTOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ca36ece9.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./block.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nfunction Block(props) {\r\n  const [quote, setQuote] = useState(\r\n    \"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Ipsum, odio.\"\r\n  );\r\n  const [author, setAuthor] = useState(\"Swaraj Baral\");\r\n  const [col, setCol] = useState(\"#000\");\r\n  const [changeCol, setChangeCol] = useState(false);\r\n  const url =\r\n    \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\r\n\r\n  var colors = [\r\n    \"#16a085\",\r\n    \"#27ae60\",\r\n    \"#2c3e50\",\r\n    \"#f39c12\",\r\n    \"#e74c3c\",\r\n    \"#9b59b6\",\r\n    \"#FB6964\",\r\n    \"#342224\",\r\n    \"#472E32\",\r\n    \"#BDBB99\",\r\n    \"#77B1A9\",\r\n    \"#73A857\",\r\n  ];\r\n  const getQuote = () => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        var rand = Math.floor(Math.random() * 103);\r\n        var q = data.quotes[rand];\r\n        var bg = colors[Math.floor(Math.random() * colors.length)];\r\n        setCol(bg);\r\n        // console.log(props.setbgcolor(bg));\r\n        props.change(bg);\r\n        setChangeCol(!changeCol);\r\n        setQuote(q.quote);\r\n        setAuthor(q.author);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  useEffect(() => {\r\n    getQuote();\r\n  }, []);\r\n  return (\r\n    <div className=\"row\">\r\n      <div\r\n        className=\"col-lg-6 offset-lg-3 col-md-12\"\r\n        id=\"quote-box\"\r\n        style={{ color: col }}\r\n      >\r\n        <CSSTransition in={changeCol} timeout={300} classNames=\"fade\">\r\n          <div id=\"text\">\r\n            {/* <p id=\"main-quote\">Main quote here</p> */}\r\n            <h2 align=\"center\" id=\"main-quote\">\r\n              <i class=\"fa fa-quote-left\"> </i>&nbsp; {quote}\r\n            </h2>\r\n          </div>\r\n        </CSSTransition>\r\n        <br />\r\n        <CSSTransition in={changeCol} timeout={300} classNames=\"fade\">\r\n          <p id=\"author\" align=\"right\" style={{ fontSize: \"large\" }}>\r\n            {\"-\" + author}\r\n          </p>\r\n        </CSSTransition>\r\n        <div className=\"buttons\">\r\n          <div className=\"socials\">\r\n            <a\r\n              href={\r\n                \"https://twitter.com/intent/tweet?hashtags=quotes&text=\" +\r\n                encodeURIComponent('\"' + quote + '\" ' + author)\r\n              }\r\n              id=\"tweet-quote\"\r\n              className=\"btn btn-secondary\"\r\n              target=\"_top\"\r\n            >\r\n              <i className=\"fa fa-twitter\"></i>\r\n            </a>\r\n            <a href=\"#\" id=\"post-quote\" className=\"btn btn-secondary\">\r\n              <i className=\"fa fa-facebook\"></i>\r\n            </a>\r\n          </div>\r\n          <a\r\n            className=\"btn btn-primary\"\r\n            id=\"new-quote\"\r\n            href=\"#\"\r\n            onClick={getQuote}\r\n          >\r\n            Next <i className=\"fa fa-arrow-right\"></i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      {/* </CSSTransition> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Block;\r\n","// import logo from \"./logo.svg\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Block from \"./components/quoteblock/Block\";\n\nfunction App() {\n  const [bgcolor, setbgcolor] = useState(\"#fff\");\n\n  const handleColor = (c) => {\n    setbgcolor(c);\n  };\n  return (\n    <div id=\"inner-root\" style={{ background: bgcolor }}>\n      <header className=\"App-header\">\n        {/* <h1 align=\"center\">Hey there, welcome to quotes app !</h1> */}\n      </header>\n      <div className=\"container\">\n        <Block change={handleColor} />\n      </div>\n      <footer align=\"center\">\n        Created with ❤️ by{\" \"}\n        <a\n          href=\"https://swarajbaral.github.io/fcc-responsive-projects/portfolio/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Swaraj\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}